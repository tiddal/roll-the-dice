{"version":3,"sources":["components/Die/styles.ts","components/Die/index.tsx","containers/RollDice/styles.ts","containers/RollDice/index.tsx","styles/index.ts","App/App.tsx","index.tsx"],"names":["Container","styled","div","Die","face","die","one","two","three","four","five","six","isRolling","RollDice","useState","dieOne","setDieOne","dieTwo","setDieTwo","setIsRolling","rollTheDices","sides","setTimeout","Math","floor","random","length","useEffect","type","onClick","disabled","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6YAEA,IAOeA,EAPGC,IAAOC,IAAV,KC0BAC,EAjBa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvBC,EAAM,CACVC,IAAK,kBAAC,IAAD,MACLC,IAAK,kBAAC,IAAD,MACLC,MAAO,kBAAC,IAAD,MACPC,KAAM,kBAAC,IAAD,MACNC,KAAM,kBAAC,IAAD,MACNC,IAAK,kBAAC,IAAD,OAGP,OACE,kBAAC,EAAD,KACGN,EAAID,K,4/CCjBX,IA6EeJ,EA7EGC,IAAOC,IAAV,KAqCX,qBAAGU,WAAuC,+FCN/BC,EAhCY,WAAO,IAAD,EACHC,mBAAuB,OADpB,mBACxBC,EADwB,KAChBC,EADgB,OAEHF,mBAAuB,SAFpB,mBAExBG,EAFwB,KAEhBC,EAFgB,OAGGJ,oBAAS,GAHZ,mBAGxBF,EAHwB,KAGbO,EAHa,KAK/B,SAASC,IACP,IAAMC,EAAwB,CAAC,MAAO,MAAO,QAAS,OAAQ,OAAQ,OACtEF,GAAa,GACbG,YAAW,WACTN,EAAUK,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,UACjDR,EAAUG,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,YAChD,KACHJ,YAAW,WACTH,GAAa,KACZ,KAOL,OAJAQ,qBAAU,WACRP,MACC,IAGD,kBAAC,EAAD,CAAWR,UAAWA,GACpB,kBAAC,EAAD,CAAKR,KAAMW,IACX,kBAAC,EAAD,CAAKX,KAAMa,IACX,4BAAQW,KAAK,SAASC,QAAST,EAAcU,SAAUlB,GACpDA,EAAY,aAAe,6B,uXC7BpC,IAkBemB,EAlBKC,YAAH,KCWFC,MATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a8a97ca6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 10em;\n  color: #2AC289;\n  filter: drop-shadow(0px 2px 2px rgba(51, 51, 51, 0.25));\n;\n`;\n\nexport default Container;\n","import React from 'react';\n\nimport {\n  FaDiceOne, FaDiceTwo, FaDiceThree, FaDiceFour, FaDiceFive, FaDiceSix,\n} from 'react-icons/fa';\nimport Container from './styles';\n\nexport interface IDie {\n  face: 'one' | 'two' | 'three' | 'four' | 'five' | 'six';\n}\n\nconst Die: React.FC<IDie> = ({ face }) => {\n  const die = {\n    one: <FaDiceOne />,\n    two: <FaDiceTwo />,\n    three: <FaDiceThree />,\n    four: <FaDiceFour />,\n    five: <FaDiceFive />,\n    six: <FaDiceSix />,\n  };\n\n  return (\n    <Container>\n      {die[face]}\n    </Container>\n  );\n};\n\nexport default Die;\n","import styled from 'styled-components';\n\ninterface StylingProps {\n  isRolling: boolean;\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  button {\n    grid-column: 1 / -1;\n    padding: 16px 48px;\n    font-size: 16px;\n    text-transform: uppercase;\n    margin-bottom: -16px;\n    border-radius: 16px;\n    background-color: #333;\n    font-weight: bold;\n    color: #fff;\n    border: none;\n    box-shadow: 0px 5px 15px rgba(51, 51, 51, 0.25);\n    cursor: pointer;\n    width: 300px;\n    transition: background-color .3s ease, width .5s ease;\n    outline: none;\n    :hover {\n      background-color: #2AC289;\n    }\n    :disabled {\n      background-color: #333;\n      cursor: progress;\n    }\n  }\n  column-gap: 20px;\n  row-gap: 75px;\n  max-width: 600px;\n  border: 2px solid #2AC289;\n  padding: 100px;\n  padding-bottom: 0;\n  border-radius: 16px;\n  box-shadow: 0px 15px 30px rgba(51, 51, 51, 0.25);  \n\n  ${({ isRolling }: StylingProps) => isRolling && `\n      div {\n        animation-name: wobble;\n        animation-duration: 1s;\n      };`}\n\n\n\n  @keyframes wobble {\n    from {\n      transform: translate3d(0, 0, 0)\n    }\n\n    15% {\n      transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n    }\n\n    30% {\n      transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n    }\n\n    45% {\n      transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n    }\n\n    60% {\n      transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n    }\n\n    75% {\n      transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n    }\n\n    to {\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n`;\n\nexport default Container;\n","import React, { useState, useEffect } from 'react';\nimport Die, { IDie } from '../../components/Die';\n\nimport Container from './styles';\n\nconst RollDice: React.FC = () => {\n  const [dieOne, setDieOne] = useState<IDie['face']>('one');\n  const [dieTwo, setDieTwo] = useState<IDie['face']>('three');\n  const [isRolling, setIsRolling] = useState(false);\n\n  function rollTheDices() {\n    const sides: IDie['face'][] = ['one', 'two', 'three', 'four', 'five', 'six'];\n    setIsRolling(true);\n    setTimeout(() => {\n      setDieOne(sides[Math.floor(Math.random() * sides.length)]);\n      setDieTwo(sides[Math.floor(Math.random() * sides.length)]);\n    }, 350);\n    setTimeout(() => {\n      setIsRolling(false);\n    }, 1000);\n  }\n\n  useEffect(() => {\n    rollTheDices();\n  }, []);\n\n  return (\n    <Container isRolling={isRolling}>\n      <Die face={dieOne} />\n      <Die face={dieTwo} />\n      <button type=\"button\" onClick={rollTheDices} disabled={isRolling}>\n        {isRolling ? 'Rolling...' : 'Click to roll the dice!'}\n      </button>\n    </Container>\n  );\n};\n\nexport default RollDice;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  };\n  body, input, button {\n    font-family: 'Mulish', Roboto, Arial, Helvetica, sans-serif;\n  };\n  body{\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    align-content: center;\n    justify-content: center;\n  };\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport RollDice from '../containers/RollDice';\nimport GlobalStyle from '../styles';\n\nfunction App(): JSX.Element {\n  return (\n    <>\n      <GlobalStyle />\n      <RollDice />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}